WITH ELIGIBILITY AS (
  SELECT AXIAL_MEMBER_ID, 
         CLIENT_NAME,
         SUM(CASE WHEN REPORTING_DATE BETWEEN '2020-01-01' AND '2020-12-31' THEN ELIGIBILITY_FLAG END) AS ELIG_PRE_1Y_MONTHS,
         SUM(CASE WHEN REPORTING_DATE BETWEEN '2020-10-01' AND '2020-12-31' THEN ELIGIBILITY_FLAG END) AS ELIG_PRE_3M_MONTHS,
         SUM(CASE WHEN REPORTING_DATE BETWEEN '2021-01-01' AND '2021-12-31' THEN ELIGIBILITY_FLAG END) AS ELIG_POST_1Y_MONTHS,
         SUM(CASE WHEN REPORTING_DATE BETWEEN '2021-01-01' AND '2021-03-31' THEN ELIGIBILITY_FLAG END) AS ELIG_POST_3M_MONTHS
  FROM ANALYTICS.CONTINUOUS_ELIGIBILITY_RESULTS
  WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
  AND REPORTING_DATE BETWEEN '2020-01-01' AND '2021-12-31'
  GROUP BY AXIAL_MEMBER_ID,
           CLIENT_NAME
  HAVING SUM(CASE WHEN REPORTING_DATE BETWEEN '2020-10-01' AND '2020-12-31' THEN ELIGIBILITY_FLAG END) = 3
),

IN_SCOPE AS (
	SELECT AXIAL_MEMBER_ID,
	       MAX(CASE WHEN MEMBER_YYYY_MM = '2021-01' THEN 1 ELSE 0 END) AS IN_SCOPE_POST_1M,
	       MIN(MEMBER_YYYY_MM) AS IN_SCOPE_MIN_MONTH,
	       COUNT(DISTINCT MEMBER_YYYY_MM) AS IN_SCOPE_POST_MONTHS
	FROM master.MEMBER_INCLUSION_EXCLUSION mie
	WHERE IS_IN_SCOPE
	AND MEMBER_YYYY_MM BETWEEN '2021-01' AND '2021-12'
	AND CLIENT_ID = 19
	GROUP BY AXIAL_MEMBER_ID
),

DEMOGRAPHIC AS ( 
	SELECT md.AXIAL_MEMBER_ID,
	       md.CLIENT_NAME,
		   ROUND(YEARS_BETWEEN('2021-01-01', md.MEMBER_DATE_OF_BIRTH), 0) AS DEMO_AGE,
		   CASE 
		       WHEN	ROUND(YEARS_BETWEEN('2021-01-01', md.MEMBER_DATE_OF_BIRTH), 0) BETWEEN 10 AND 25 THEN 'Gen Z'
		   	   WHEN ROUND(YEARS_BETWEEN('2021-01-01', md.MEMBER_DATE_OF_BIRTH), 0) BETWEEN 26 AND 41 THEN 'Millennials'
		   	   WHEN ROUND(YEARS_BETWEEN('2021-01-01', md.MEMBER_DATE_OF_BIRTH), 0) BETWEEN 42 AND 57 THEN 'Gen X'
		   	   WHEN ROUND(YEARS_BETWEEN('2021-01-01', md.MEMBER_DATE_OF_BIRTH), 0) BETWEEN 58 AND 67 THEN 'Boomers'
		   ELSE 'Other'
	   	   END AS DEMO_GENERATION,
		   CASE WHEN md.MEMBER_GENDER = 'M' THEN 1 ELSE 0 END as DEMO_GENDER,
		   LOWER(mad.COUNTY_NAME) AS DEMO_COUNTY,
		   LOWER(mad.MEMBER_STATE) AS DEMO_STATE
	FROM MASTER.MEMBER_DIM md
	LEFT JOIN MASTER.MEMBER_ADDRESS_DIM mad
	ON mad.AXIAL_MEMBER_ID = md.AXIAL_MEMBER_ID
	WHERE md.CLIENT_NAME IN ('csin', 'hmkde_md')
),

SVI AS (
	SELECT LOWER(COUNTY_NAME) AS SVI_COUNTY,
	       LOWER(STATE_ABBREVIATION) AS SVI_STATE,
	       ROUND(SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_POP,
	       ROUND(SUM(PERSONS_BELOW_POVERTY)/SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_PCT_BELOW_POVERTY,
	       ROUND(SUM(UNEMPLOYED_ESTIMATE)/SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_PCT_UNEMPLOTED,
	       ROUND(SUM(PER_CAPITA_INCOME * POPULATION_SIZE)/SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_PCI,
	       ROUND(SUM(PERSONS_MINORITY)/SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_PCT_MINORITY,
	       ROUND(SUM(PERSONS_MINORITY)/SUM(POPULATION_SIZE), 3) AS SVI_COUNTY_PCT_DISABILITY
	FROM REFERENCE.SVI_ALL sa
	GROUP BY LOWER(COUNTY_NAME),
	         LOWER(STATE_ABBREVIATION)
),

MED_UTIL_1M AS (	
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT AXIAL_CLAIM_ID) AS MED_UTIL_1M_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'professional' THEN AXIAL_CLAIM_ID END)) AS MED_UTIL_1M_PROF_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'facility' THEN AXIAL_CLAIM_ID END)) AS MED_UTIL_1M_FAC_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'professional' THEN SERVICING_PROVIDER_ID END)) AS MED_UTIL_1M_PROF_PROVIDERS,
	       SUM(AMOUNT_ALLOWED) AS MED_UTIL_1M_ALLOWED
	FROM MASTER.MST_MEDICAL_CLAIMS 
	WHERE SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY AXIAL_MEMBER_ID
),

MED_UTIL_1Y AS (	
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT AXIAL_CLAIM_ID) AS MED_UTIL_1Y_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'professional' THEN AXIAL_CLAIM_ID END)) AS MED_UTIL_1Y_PROF_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'facility' THEN AXIAL_CLAIM_ID END)) AS MED_UTIL_1Y_FAC_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN AXIAL_CLAIM_TYPE = 'professional' THEN SERVICING_PROVIDER_ID END)) AS MED_UTIL_1Y_PROF_PROVIDERS,
	       SUM(AMOUNT_ALLOWED) AS MED_UTIL_1Y_ALLOWED
	FROM MASTER.MST_MEDICAL_CLAIMS 
	WHERE SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY AXIAL_MEMBER_ID
),

MED_UTIL_1Y_POST AS (	
	SELECT AXIAL_MEMBER_ID,
	       SUM(AMOUNT_ALLOWED) AS MED_UTIL_1Y_POST_ALLOWED
	FROM MASTER.MST_MEDICAL_CLAIMS 
	WHERE SERVICE_FROM_DATE BETWEEN '2021-01-01' AND '2021-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY AXIAL_MEMBER_ID
),


RX_UTIL_1M AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT AXIAL_PRESCRIPTION_FILL_ID) AS RX_UTIL_1M_FILLS,
	       COUNT(DISTINCT PRESCRIBER_ID) AS RX_UTIL_1M_PRESCRIBERS,
	       COUNT(DISTINCT PHARMACY_ID) AS RX_UTIL_1M_PHARMACIES,
	       SUM(AMOUNT_ALLOWED) AS RX_UTIL_1M_AMOUNT_ALLOWED,
	       SUM(IS_MAT_FLAG) AS RX_UTIL_1M_MAT
	FROM master.MST_RX_CLAIMS mrc
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	GROUP BY AXIAL_MEMBER_ID
),

RX_UTIL_1Y AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT AXIAL_PRESCRIPTION_FILL_ID) AS RX_UTIL_1Y_FILLS,
	       COUNT(DISTINCT PRESCRIBER_ID) AS RX_UTIL_1Y_PRESCRIBERS,
	       COUNT(DISTINCT PHARMACY_ID) AS RX_UTIL_1Y_PHARMACIES,
	       SUM(AMOUNT_ALLOWED) AS RX_UTIL_1Y_AMOUNT_ALLOWED,
	       SUM(IS_MAT_FLAG) AS RX_UTIL_1Y_MAT
	FROM master.MST_RX_CLAIMS mrc
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	GROUP BY AXIAL_MEMBER_ID
),

PROC_1M AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN pc.IS_MAT THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_MAT_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_PSYCHOSOCIAL_ADDICTION_COUNSELING THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_ADDICTION_COUNSELING_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_NONPHARMACOLOGICAL_SUD_TREATMENT THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_NONPHARM_SUD_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_COGNITIVE_BEHAVIORAL_THERAPY THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_COGNITIVE_BH_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_PSYCHOSOCIAL THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_PSYSOC_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_DETOXIFICATION THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_DETOX_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_SMOKING THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_SMOKING_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.HCPCS IN ('J0400','J1943','J1944','J2358','J2426','J2798','J2794','J1630','J1631') THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1M_SCHIZOPHRENIA_INJECT_CLAIMS
	FROM master.MST_MEDICAL_CLAIMS mmc
	INNER JOIN REFERENCE.PROCEDURE_CODE pc
	ON mmc.PROCEDURE_CODE = pc.HCPCS
	WHERE SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY mmc.AXIAL_MEMBER_ID
),


PROC_1Y AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN pc.IS_MAT THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_MAT_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_PSYCHOSOCIAL_ADDICTION_COUNSELING THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_ADDICTION_COUNSELING_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_NONPHARMACOLOGICAL_SUD_TREATMENT THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_NONPHARM_SUD_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_COGNITIVE_BEHAVIORAL_THERAPY THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_COGNITIVE_BH_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_PSYCHOSOCIAL THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_PSYSOC_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_DETOXIFICATION THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_DETOX_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.IS_SMOKING THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_SMOKING_CLAIMS,
	       COUNT(DISTINCT(CASE WHEN pc.HCPCS IN ('J0400','J1943','J1944','J2358','J2426','J2798','J2794','J1630','J1631') THEN mmc.AXIAL_CLAIM_ID END)) AS PROC_1Y_SCHIZOPHRENIA_INJECT_CLAIMS
	FROM master.MST_MEDICAL_CLAIMS mmc
	INNER JOIN REFERENCE.PROCEDURE_CODE pc
	ON mmc.PROCEDURE_CODE = pc.HCPCS
	WHERE SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY mmc.AXIAL_MEMBER_ID
),

POS_1M AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT PLACE_OF_SERVICE) AS POS_1M_UNIQUE,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 11 THEN SERVICE_FROM_DATE END)) AS POS_1M_11_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 20 THEN SERVICE_FROM_DATE END)) AS POS_1M_20_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 21 THEN SERVICE_FROM_DATE END)) AS POS_1M_21_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 22 THEN SERVICE_FROM_DATE END)) AS POS_1M_22_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 23 THEN SERVICE_FROM_DATE END)) AS POS_1M_23_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 24 THEN SERVICE_FROM_DATE END)) AS POS_1M_24_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 53 THEN SERVICE_FROM_DATE END)) AS POS_1M_53_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 55 THEN SERVICE_FROM_DATE END)) AS POS_1M_55_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 57 THEN SERVICE_FROM_DATE END)) AS POS_1M_57_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 58 THEN SERVICE_FROM_DATE END)) AS POS_1M_58_DATES
	FROM master.MST_MEDICAL_CLAIMS mmc
	WHERE SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY AXIAL_MEMBER_ID
),

POS_1Y AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT PLACE_OF_SERVICE) AS POS_1Y_UNIQUE,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 11 THEN SERVICE_FROM_DATE END)) AS POS_1Y_11_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 20 THEN SERVICE_FROM_DATE END)) AS POS_1Y_20_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 21 THEN SERVICE_FROM_DATE END)) AS POS_1Y_21_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 22 THEN SERVICE_FROM_DATE END)) AS POS_1Y_22_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 23 THEN SERVICE_FROM_DATE END)) AS POS_1Y_23_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 24 THEN SERVICE_FROM_DATE END)) AS POS_1Y_24_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 53 THEN SERVICE_FROM_DATE END)) AS POS_1Y_53_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 55 THEN SERVICE_FROM_DATE END)) AS POS_1Y_55_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 57 THEN SERVICE_FROM_DATE END)) AS POS_1Y_57_DATES,
	       COUNT(DISTINCT(CASE WHEN PLACE_OF_SERVICE = 58 THEN SERVICE_FROM_DATE END)) AS POS_1Y_58_DATES
	FROM master.MST_MEDICAL_CLAIMS mmc
	WHERE SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	AND CAST(PLACE_OF_SERVICE AS CHAR(2)) IN ('11', '20', '21', '22', '23', '24', '53', '55', '57', '58')
	AND CLIENT_NAME IN ('csin', 'hmkde_md')
	GROUP BY AXIAL_MEMBER_ID
),

DX_1M AS (
  SELECT mcdl.AXIAL_MEMBER_ID,
         MAX(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN 1 ELSE 0 END) AS DX_1M_SUD_FLAG,
         MAX(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN 1 ELSE 0 END) AS DX_1M_BH_FLAG,
         MAX(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN 1 ELSE 0 END) AS DX_1M_RISK_FLAG,
         MAX(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN 1 ELSE 0 END) AS DX_1M_COMORBID_FLAG,
         MAX(CASE WHEN id.IS_DRUG_OVERDOSE_INDICATOR THEN 1 ELSE 0 END) AS DX_1M_DRUG_OVERDOSE_FLAG,
         MAX(CASE WHEN id.IS_NICOTINE_DEPENDENCE THEN 1 ELSE 0 END) AS DX_1M_NICOTENE_DEPEND_FLAG,
         MAX(CASE WHEN id.IS_SUD_WITH_WITHDRAWAL THEN 1 ELSE 0 END) AS DX_1M_SUD_WITHDRAW_FLAG,
         MAX(CASE WHEN id.IS_PREGNANCY THEN 1 ELSE 0 END) AS DX_1M_PREGNANCY_FLAG,
         MAX(CASE WHEN id.ICD_SHORT_DESCRIPTION = 'COVID-19' THEN 1 ELSE 0 END) AS DX_1M_COVID_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'ALCOHOL USE DISORDER' THEN 1 ELSE 0 END) AS DX_1M_AUD_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OPIOID USE DISORDER' THEN 1 ELSE 0 END) AS DX_1M_OUD_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'COCAINE USE DISORDER' THEN 1 ELSE 0 END) AS DX_1M_COCAINE_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'STIMULANT USE DISORDER' THEN 1 ELSE 0 END) AS DX_1M_STIMULANTS_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OTHER PSYCHOACTIVE SUBSTANCE USE DISORDER' THEN 1 ELSE 0 END) AS DX_1M_OTHER_PSYCHO_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Mood Disorder' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_MOOD_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Trauma and Stressor Disorder' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_TRAUMA_STRESSOR_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Current or Past Smoking' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_CURRENT_PAST_SMOKING_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Personality Disorder' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_PERSONALITY_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Anxiety Disorder' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_ANXIETY_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Sleep Apnea' THEN 1 ELSE 0 END) AS DX_1M_COMORBID_SLEEP_APNEA_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Bipolar Disorder' THEN 1 ELSE 0 END) AS DX_1M_BH_BIPOLAR_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Depression Disorder' THEN 1 ELSE 0 END) AS DX_1M_BH_DEPRESSION_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Schizophrenia' THEN 1 ELSE 0 END) AS DX_1M_BH_SCHIZOPHRENIA_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Post-traumatic stress disorder' THEN 1 ELSE 0 END) AS DX_1M_BH_PTSD_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Endocrine; nutritional; and metabolic diseases and immunity disorders' THEN 1 ELSE 0 END) AS DX_1M_CCS_ENM_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the musculoskeletal system and connective tissue' THEN 1 ELSE 0 END) AS DX_1M_CCS_MUSCULO_FLAG,         
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the blood and blood-forming organs' THEN 1 ELSE 0 END) AS DX_1M_CCS_BLOOD_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Symptoms; signs; and ill-defined conditions and factors influencing health status' THEN 1 ELSE 0 END) AS DX_1M_CCS_HEALTH_FACTORS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Infectious and parasitic diseases' THEN 1 ELSE 0 END) AS DX_1M_CCS_INFECTION_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the respiratory system' THEN 1 ELSE 0 END) AS DX_1M_CCS_RESPIRATORY_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the nervous system and sense organs' THEN 1 ELSE 0 END) AS DX_1M_CCS_NERVOUS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the circulatory system' THEN 1 ELSE 0 END) AS DX_1M_CCS_CIRCULATORY_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the digestive system' THEN 1 ELSE 0 END) AS DX_1M_CCS_DIGESTIVE_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Injury and poisoning' THEN 1 ELSE 0 END) AS DX_1M_CCS_INJURY_POISON_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the skin and subcutaneous tissue' THEN 1 ELSE 0 END) AS DX_1M_CCS_SKIN_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Mental Illness' THEN 1 ELSE 0 END) AS DX_1M_CCS_MENTAL_ILLNESS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Complications of pregnancy; childbirth; and the puerperium' THEN 1 ELSE 0 END) AS DX_1M_CCS_PREGNANCY_COMPLICATION_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Alcohol-related disorders' THEN 1 ELSE 0 END) AS DX_1M_CCS_ALCOHOL_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Sexually transmitted infections (not HIV or hepatitis)' THEN 1 ELSE 0 END) AS DX_1M_CCS_STI_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Acute CVD' THEN 1 ELSE 0 END) AS DX_1M_CCS_ACUTE_CVD_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Adverse effects of medical drugs' THEN 1 ELSE 0 END) AS DX_1M_CCS_ADVERSE_EFFECTS_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Septicemia' THEN 1 ELSE 0 END) AS DX_1M_CCS_SEPSIS_FLAG,
         COUNT(DISTINCT(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_SUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_BH_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_RISK_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_DRUG_OVERDOSE_INDICATOR THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_DRUG_OVERDOSE_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_NICOTINE_DEPENDENCE THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_NICOTENE_DEPEND_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_SUD_WITH_WITHDRAWAL THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_SUD_WITHDRAW_DATES,
         COUNT(DISTINCT(CASE WHEN id.ICD_SHORT_DESCRIPTION = 'COVID-19' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COVID_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'ALCOHOL USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_AUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OPIOID USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_OUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'COCAINE USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COCAINE_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'STIMULANT USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_STIMULANTS_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OTHER PSYCHOACTIVE SUBSTANCE USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_OTHER_PSYCHO_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Mood Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_MOOD_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Trauma and Stressor Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_TRAUMA_STRESSOR_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Current or Past Smoking' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_CURRENT_PAST_SMOKING_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Personality Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_PERSONALITY_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Anxiety Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_ANXIETY_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Sleep Apnea' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_COMORBID_SLEEP_APNEA_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Bipolar Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_BH_BIPOLAR_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Depression Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_BH_DEPRESSION_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Schizophrenia' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_BH_SCHIZOPHRENIA_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Post-traumatic stress disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_BH_PTSD_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Endocrine; nutritional; and metabolic diseases and immunity disorders' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_ENM_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the musculoskeletal system and connective tissue' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_MUSCULO_DATES,         
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the blood and blood-forming organs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_BLOOD_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Symptoms; signs; and ill-defined conditions and factors influencing health status' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_HEALTH_FACTORS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Mental Illness' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_MENTAL_ILLNESS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Infectious and parasitic diseases' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_INFECTION_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the respiratory system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_RESPIRATORY_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the nervous system and sense organs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_NERVOUS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the circulatory system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_CIRCULATORY_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the digestive system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_DIGESTIVE_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Injury and poisoning' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_INJURY_POISON_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the skin and subcutaneous tissue' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_SKIN_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Alcohol-related disorders' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_ALCOHOL_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Sexually transmitted infections (not HIV or hepatitis)' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_STI_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Acute CVD' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_ACUTE_CVD_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Adverse effects of medical drugs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1M_CCS_ADVERSE_EFFECTS_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Septicemia' THEN 1 ELSE 0 END)) AS DX_1M_CCS_SEPSIS_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1M_SUD_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1M_BH_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1M_RISK_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1M_COMORBID_UNIQUE
  FROM MASTER.MEDICAL_CLAIM_DX_LONG mcdl
  INNER JOIN REFERENCE.ICD_DIAGNOSIS id
  ON id.ICD_UNFORMATTED_CODE = mcdl.ICD_FORMATTED_CODE
  WHERE mcdl.CLIENT_NAME IN ('csin', 'hmkde_md')
  AND mcdl.SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
  GROUP BY mcdl.AXIAL_MEMBER_ID
),

DX_1Y AS (
  SELECT mcdl.AXIAL_MEMBER_ID,
         MAX(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN 1 ELSE 0 END) AS DX_1Y_SUD_FLAG,
         MAX(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN 1 ELSE 0 END) AS DX_1Y_BH_FLAG,
         MAX(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN 1 ELSE 0 END) AS DX_1Y_RISK_FLAG,
         MAX(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_FLAG,
         MAX(CASE WHEN id.IS_DRUG_OVERDOSE_INDICATOR THEN 1 ELSE 0 END) AS DX_1Y_DRUG_OVERDOSE_FLAG,
         MAX(CASE WHEN id.IS_NICOTINE_DEPENDENCE THEN 1 ELSE 0 END) AS DX_1Y_NICOTENE_DEPEND_FLAG,
         MAX(CASE WHEN id.IS_SUD_WITH_WITHDRAWAL THEN 1 ELSE 0 END) AS DX_1Y_SUD_WITHDRAW_FLAG,
         MAX(CASE WHEN id.IS_PREGNANCY THEN 1 ELSE 0 END) AS DX_1Y_PREGNANCY_FLAG,
         MAX(CASE WHEN id.ICD_SHORT_DESCRIPTION = 'COVID-19' THEN 1 ELSE 0 END) AS DX_1Y_COVID_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'ALCOHOL USE DISORDER' THEN 1 ELSE 0 END) AS DX_1Y_AUD_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OPIOID USE DISORDER' THEN 1 ELSE 0 END) AS DX_1Y_OUD_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'COCAINE USE DISORDER' THEN 1 ELSE 0 END) AS DX_1Y_COCAINE_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'STIMULANT USE DISORDER' THEN 1 ELSE 0 END) AS DX_1Y_STIMULANTS_FLAG,
         MAX(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OTHER PSYCHOACTIVE SUBSTANCE USE DISORDER' THEN 1 ELSE 0 END) AS DX_1Y_OTHER_PSYCHO_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Mood Disorder' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_MOOD_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Trauma and Stressor Disorder' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_TRAUMA_STRESSOR_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Current or Past Smoking' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_CURRENT_PAST_SMOKING_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Personality Disorder' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_PERSONALITY_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Anxiety Disorder' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_ANXIETY_FLAG,
         MAX(CASE WHEN id.COMORBID_DESCRIPTION = 'Sleep Apnea' THEN 1 ELSE 0 END) AS DX_1Y_COMORBID_SLEEP_APNEA_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Bipolar Disorder' THEN 1 ELSE 0 END) AS DX_1Y_BH_BIPOLAR_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Depression Disorder' THEN 1 ELSE 0 END) AS DX_1Y_BH_DEPRESSION_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Schizophrenia' THEN 1 ELSE 0 END) AS DX_1Y_BH_SCHIZOPHRENIA_FLAG,
         MAX(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Post-traumatic stress disorder' THEN 1 ELSE 0 END) AS DX_1Y_BH_PTSD_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Endocrine; nutritional; and metabolic diseases and immunity disorders' THEN 1 ELSE 0 END) AS DX_1Y_CCS_ENM_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the musculoskeletal system and connective tissue' THEN 1 ELSE 0 END) AS DX_1Y_CCS_MUSCULO_FLAG,         
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the blood and blood-forming organs' THEN 1 ELSE 0 END) AS DX_1Y_CCS_BLOOD_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Symptoms; signs; and ill-defined conditions and factors influencing health status' THEN 1 ELSE 0 END) AS DX_1Y_CCS_HEALTH_FACTORS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Infectious and parasitic diseases' THEN 1 ELSE 0 END) AS DX_1Y_CCS_INFECTION_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the respiratory system' THEN 1 ELSE 0 END) AS DX_1Y_CCS_RESPIRATORY_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the nervous system and sense organs' THEN 1 ELSE 0 END) AS DX_1Y_CCS_NERVOUS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the circulatory system' THEN 1 ELSE 0 END) AS DX_1Y_CCS_CIRCULATORY_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the digestive system' THEN 1 ELSE 0 END) AS DX_1Y_CCS_DIGESTIVE_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Injury and poisoning' THEN 1 ELSE 0 END) AS DX_1Y_CCS_INJURY_POISON_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the skin and subcutaneous tissue' THEN 1 ELSE 0 END) AS DX_1Y_CCS_SKIN_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Mental Illness' THEN 1 ELSE 0 END) AS DX_1Y_CCS_MENTAL_ILLNESS_FLAG,
         MAX(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Complications of pregnancy; childbirth; and the puerperium' THEN 1 ELSE 0 END) AS DX_1Y_CCS_PREGNANCY_COMPLICATION_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Alcohol-related disorders' THEN 1 ELSE 0 END) AS DX_1Y_CCS_ALCOHOL_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Sexually transmitted infections (not HIV or hepatitis)' THEN 1 ELSE 0 END) AS DX_1Y_CCS_STI_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Acute CVD' THEN 1 ELSE 0 END) AS DX_1Y_CCS_ACUTE_CVD_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Adverse effects of medical drugs' THEN 1 ELSE 0 END) AS DX_1Y_CCS_ADVERSE_EFFECTS_FLAG,
         MAX(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Septicemia' THEN 1 ELSE 0 END) AS DX_1Y_CCS_SEPSIS_FLAG,
         COUNT(DISTINCT(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_SUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_BH_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_RISK_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_DRUG_OVERDOSE_INDICATOR THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_DRUG_OVERDOSE_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_NICOTINE_DEPENDENCE THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_NICOTENE_DEPEND_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_SUD_WITH_WITHDRAWAL THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_SUD_WITHDRAW_DATES,
         COUNT(DISTINCT(CASE WHEN id.ICD_SHORT_DESCRIPTION = 'COVID-19' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COVID_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'ALCOHOL USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_AUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OPIOID USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_OUD_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'COCAINE USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COCAINE_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'STIMULANT USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_STIMULANTS_DATES,
         COUNT(DISTINCT(CASE WHEN id.SUBSTANCE_USE_DISORDER_TYPE = 'OTHER PSYCHOACTIVE SUBSTANCE USE DISORDER' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_OTHER_PSYCHO_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Mood Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_MOOD_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Trauma and Stressor Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_TRAUMA_STRESSOR_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Current or Past Smoking' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_CURRENT_PAST_SMOKING_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Personality Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_PERSONALITY_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Anxiety Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_ANXIETY_DATES,
         COUNT(DISTINCT(CASE WHEN id.COMORBID_DESCRIPTION = 'Sleep Apnea' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_COMORBID_SLEEP_APNEA_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Bipolar Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_BH_BIPOLAR_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Depression Disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_BH_DEPRESSION_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Schizophrenia' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_BH_SCHIZOPHRENIA_DATES,
         COUNT(DISTINCT(CASE WHEN id.BEHAVIORAL_HEALTH_TYPE = 'Post-traumatic stress disorder' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_BH_PTSD_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Endocrine; nutritional; and metabolic diseases and immunity disorders' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_ENM_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the musculoskeletal system and connective tissue' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_MUSCULO_DATES,         
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the blood and blood-forming organs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_BLOOD_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Symptoms; signs; and ill-defined conditions and factors influencing health status' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_HEALTH_FACTORS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Mental Illness' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_MENTAL_ILLNESS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Infectious and parasitic diseases' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_INFECTION_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the respiratory system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_RESPIRATORY_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the nervous system and sense organs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_NERVOUS_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the circulatory system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_CIRCULATORY_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the digestive system' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_DIGESTIVE_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Injury and poisoning' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_INJURY_POISON_DATES,
         COUNT(DISTINCT(CASE WHEN id.MULTI_CCS_LEVEL_1_DESCRIPTION = 'Diseases of the skin and subcutaneous tissue' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_SKIN_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Alcohol-related disorders' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_ALCOHOL_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Sexually transmitted infections (not HIV or hepatitis)' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_STI_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Acute CVD' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_ACUTE_CVD_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Adverse effects of medical drugs' THEN mcdl.SERVICE_FROM_DATE END)) AS DX_1Y_CCS_ADVERSE_EFFECTS_DATES,
         COUNT(DISTINCT(CASE WHEN id.CCS_CATEGORY_DESCRIPTION = 'Septicemia' THEN 1 ELSE 0 END)) AS DX_1Y_CCS_SEPSIS_DATES,
         COUNT(DISTINCT(CASE WHEN id.IS_SUBSTANCE_USE_DISORDER THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1Y_SUD_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_BEHAVIORAL_HEALTH THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1Y_BH_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_RISK_MEDICAL_DIAGNOSIS THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1Y_RISK_UNIQUE,
         COUNT(DISTINCT(CASE WHEN id.IS_COMORBID_DIAGNOSIS THEN id.ICD_UNFORMATTED_CODE END)) AS DX_1Y_COMORBID_UNIQUE
  FROM MASTER.MEDICAL_CLAIM_DX_LONG mcdl
  INNER JOIN REFERENCE.ICD_DIAGNOSIS id
  ON id.ICD_UNFORMATTED_CODE = mcdl.ICD_FORMATTED_CODE
  WHERE mcdl.CLIENT_NAME IN ('csin', 'hmkde_md')
  AND mcdl.SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
  GROUP BY mcdl.AXIAL_MEMBER_ID
),

RX_1M AS (
	SELECT mrc.AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN nd.IS_METHADONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_METHADONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_POLYDRUG THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_POLYDRUG_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_POLYDRUG_CRITICAL THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_POLYDRUG_CRITICAL_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'stimulant' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_STIMULANT_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'benzodiazepine' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_BENZO_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'barbiturate' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_BARBITURATE_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'carisoprodol' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_CARISOPRODOL_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'sleep aid' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_SLEEP_AID_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_BUPRENORPHINE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_BUPRENORPHINE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_LONG_ACTING_OPIOID THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_LAO_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_MAT THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_MAT_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_NALTREXONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_NALTREXONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_GABAPENTIN THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_GABAPENTIN_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_NALOXONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_NALOXONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_FENTANYL THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_FENTANYL_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_MUSCLE_RELAXANT THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_MUSCLE_RELAX_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_OPIOID_PAIN THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_OPIOID_PAIN_FILLS,
	       COUNT(DISTINCT rn.THERA_CLASS_DESC) AS RX_1M_THERA_CLASS_UNIQUE,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Antidepressants' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_ANTIDEPRESSANT_FILLS,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Antidepressants' THEN rn.THERA_CLASS_DESC END)) AS RX_1M_ANTIDEPRESSANT_THERA_CLASSES,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Tranquilizers/Antipsychotics' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1M_ANTIPSYCHOTIC_FILLS,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Tranquilizers/Antipsychotics' THEN rn.THERA_CLASS_DESC END)) AS RX_1M_ANTIPSYCHOTIC_THERA_CLASSES
	FROM MASTER.MST_RX_CLAIMS mrc
	INNER JOIN REFERENCE.NDC_DRUG nd
	ON mrc.NDC = nd.NDC_11_ID
	INNER JOIN ZZ_DBM.REDBOOK_NDC rn
	ON mrc.NDC = rn.NDC
	WHERE mrc.CLIENT_NAME IN ('csin', 'hmkde_md')
	AND mrc.SERVICE_FROM_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	GROUP BY mrc.AXIAL_MEMBER_ID
),

RX_1Y AS (
	SELECT mrc.AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN nd.IS_METHADONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_METHADONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_POLYDRUG THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_POLYDRUG_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_POLYDRUG_CRITICAL THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_POLYDRUG_CRITICAL_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'stimulant' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_STIMULANT_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'benzodiazepine' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_BENZO_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'barbiturate' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_BARBITURATE_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'carisoprodol' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_CARISOPRODOL_FILLS,
	       COUNT(DISTINCT(CASE WHEN POLYDRUG_TYPE = 'sleep aid' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_SLEEP_AID_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_BUPRENORPHINE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_BUPRENORPHINE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_LONG_ACTING_OPIOID THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_LAO_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_MAT THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_MAT_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_NALTREXONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_NALTREXONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_GABAPENTIN THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_GABAPENTIN_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_NALOXONE THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_NALOXONE_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_FENTANYL THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_FENTANYL_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_MUSCLE_RELAXANT THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_MUSCLE_RELAX_FILLS,
	       COUNT(DISTINCT(CASE WHEN nd.IS_OPIOID_PAIN THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_OPIOID_PAIN_FILLS,
	       COUNT(DISTINCT rn.THERA_CLASS_DESC) AS RX_1Y_THERA_CLASS_UNIQUE,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Antidepressants' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_ANTIDEPRESSANT_FILLS,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Antidepressants' THEN rn.THERA_CLASS_DESC END)) AS RX_1Y_ANTIDEPRESSANT_THERA_CLASSES,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Tranquilizers/Antipsychotics' THEN mrc.AXIAL_PRESCRIPTION_FILL_ID END)) AS RX_1Y_ANTIPSYCHOTIC_FILLS,
	       COUNT(DISTINCT(CASE WHEN rn.THERA6_DESC = 'Tranquilizers/Antipsychotics' THEN rn.THERA_CLASS_DESC END)) AS RX_1Y_ANTIPSYCHOTIC_THERA_CLASSES
	FROM MASTER.MST_RX_CLAIMS mrc
	INNER JOIN REFERENCE.NDC_DRUG nd
	ON mrc.NDC = nd.NDC_11_ID
	INNER JOIN ZZ_DBM.REDBOOK_NDC rn
	ON mrc.NDC = rn.NDC
	WHERE mrc.CLIENT_NAME IN ('csin', 'hmkde_md')
	AND mrc.SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	GROUP BY mrc.AXIAL_MEMBER_ID
),

HCC_1Y AS (
	SELECT mcdl.AXIAL_MEMBER_ID,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC254' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC254_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC160' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC160_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC115' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC115_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC010' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC010_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC253' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC253_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC071' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC071_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC064' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC064_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC027' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC027_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC135' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC135_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC029' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC029_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC102' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC102_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC097' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC097_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC128' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC128_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC150' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC150_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC146' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC146_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC009' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC009_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC055' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC055_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC137' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC137_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC062' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC062_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC008' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC008_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC046' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC046_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC012' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC012_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC075' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC075_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC020' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC020_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC063' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC063_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC013' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC013_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC026' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC026_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC023' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC023_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC074' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC074_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC001' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC001_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC149' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC149_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC036' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC036_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC030' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC030_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC187' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC187_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC120' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC120_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC068' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC068_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC004' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC004_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC154' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC154_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC118' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC118_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC056' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC056_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC153' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC153_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC011' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC011_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC162' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC162_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC188' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC188_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC019' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC019_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC037_2' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC037_2_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC145' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC145_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC057' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC057_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC070' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC070_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC028' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC028_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC161' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC161_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC061' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC061_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC217' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC217_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC048' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC048_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC119' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC119_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC021' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC021_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC073' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC073_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC037_1' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC037_1_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC130' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC130_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC142' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC142_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC138' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC138_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC139' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_HCC139_DATES
	FROM MASTER.MEDICAL_CLAIM_DX_LONG mcdl
	INNER JOIN ZZ_DBM.HCC_CHRONIC_CONDITIONS hcc
	ON hcc.DX = mcdl.ICD_FORMATTED_CODE
	WHERE mcdl.CLIENT_NAME IN ('csin', 'hmkde_md')  
	AND mcdl.SERVICE_FROM_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	GROUP BY mcdl.AXIAL_MEMBER_ID
),

HCC_1Y_POST AS (
	SELECT mcdl.AXIAL_MEMBER_ID,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC254' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC254_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC160' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC160_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC115' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC115_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC010' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC010_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC253' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC253_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC071' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC071_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC064' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC064_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC027' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC027_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC135' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC135_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC029' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC029_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC102' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC102_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC097' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC097_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC128' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC128_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC150' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC150_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC146' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC146_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC009' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC009_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC055' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC055_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC137' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC137_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC062' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC062_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC008' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC008_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC046' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC046_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC012' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC012_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC075' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC075_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC020' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC020_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC063' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC063_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC013' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC013_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC026' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC026_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC023' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC023_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC074' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC074_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC001' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC001_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC149' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC149_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC036' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC036_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC030' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC030_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC187' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC187_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC120' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC120_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC068' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC068_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC004' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC004_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC154' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC154_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC118' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC118_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC056' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC056_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC153' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC153_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC011' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC011_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC162' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC162_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC188' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC188_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC019' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC019_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC037_2' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC037_2_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC145' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC145_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC057' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC057_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC070' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC070_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC028' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC028_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC161' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC161_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC061' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC061_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC217' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC217_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC048' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC048_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC119' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC119_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC021' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC021_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC073' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC073_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC037_1' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC037_1_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC130' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC130_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC142' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC142_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC138' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC138_DATES,
			COUNT(DISTINCT(CASE WHEN hcc.HCC = 'HCC139' THEN mcdl.SERVICE_FROM_DATE END)) AS HCC_1Y_POST_HCC139_DATES
	FROM MASTER.MEDICAL_CLAIM_DX_LONG mcdl
	INNER JOIN ZZ_DBM.HCC_CHRONIC_CONDITIONS hcc
	ON hcc.DX = mcdl.ICD_FORMATTED_CODE
	WHERE mcdl.CLIENT_NAME IN ('csin', 'hmkde_md')  
	AND mcdl.SERVICE_FROM_DATE BETWEEN '2021-01-01' AND '2021-12-31'
	GROUP BY mcdl.AXIAL_MEMBER_ID
),

PME_1M AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN (PME_CATEGORY = 'ED Encounter' OR ADMIT_VIA_ED) THEN PME_ID END)) AS PME_1M_ER,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' THEN PME_ID END)) AS PME_1M_IP_PME,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_BEHAVIORAL_HEALTH_POS THEN PME_ID END)) AS PME_1M_IP_BHPOS,
	       COUNT(DISTINCT(CASE WHEN (PME_CATEGORY = 'ED Encounter' OR ADMIT_VIA_ED) AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1M_ER_SUD,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1M_IP_SUD
	FROM ANALYTICS.PATIENT_MEDICAL_ENCOUNTER pme
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND PME_START_DATE BETWEEN '2020-12-01' AND '2020-12-31'
	GROUP BY AXIAL_MEMBER_ID
),

PME_1Y AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN (PME_CATEGORY = 'ED Encounter' OR ADMIT_VIA_ED) THEN PME_ID END)) AS PME_1Y_ER,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' THEN PME_ID END)) AS PME_1Y_IP_PME,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_BEHAVIORAL_HEALTH_POS THEN PME_ID END)) AS PME_1Y_IP_BHPOS,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'ED Encounter' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1Y_ER_SUD,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1Y_IP_SUD
	FROM ANALYTICS.PATIENT_MEDICAL_ENCOUNTER pme
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND PME_START_DATE BETWEEN '2020-01-01' AND '2020-12-31'
	GROUP BY AXIAL_MEMBER_ID
),

PME_1M_POST AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN (PME_CATEGORY = 'ED Encounter' OR ADMIT_VIA_ED) THEN PME_ID END)) AS PME_1M_POST_ER,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' THEN PME_ID END)) AS PME_1M_POST_IP_PME,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_BEHAVIORAL_HEALTH_POS THEN PME_ID END)) AS PME_1M_POST_IP_BHPOS,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'ED Encounter' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1M_POST_ER_SUD,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1M_POST_IP_SUD
	FROM ANALYTICS.PATIENT_MEDICAL_ENCOUNTER pme
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND PME_START_DATE BETWEEN '2021-01-01' AND '2021-01-31'
	GROUP BY AXIAL_MEMBER_ID
),

PME_1Y_POST AS (
	SELECT AXIAL_MEMBER_ID,
	       COUNT(DISTINCT(CASE WHEN (PME_CATEGORY = 'ED Encounter' OR ADMIT_VIA_ED) THEN PME_ID END)) AS PME_1Y_POST_ER,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' THEN PME_ID END)) AS PME_1Y_POST_IP_PME,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_BEHAVIORAL_HEALTH_POS THEN PME_ID END)) AS PME_1Y_POST_IP_BHPOS,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'ED Encounter' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1Y_POST_ER_SUD,
	       COUNT(DISTINCT(CASE WHEN PME_CATEGORY = 'Inpatient Stay' AND HAS_SUD_DX_PROFESSIONAL THEN PME_ID END)) AS PME_1Y_POST_IP_SUD
	FROM ANALYTICS.PATIENT_MEDICAL_ENCOUNTER pme
	WHERE CLIENT_NAME IN ('csin', 'hmkde_md')
	AND PME_START_DATE BETWEEN '2021-01-01' AND '2021-12-31'
	GROUP BY AXIAL_MEMBER_ID
)

SELECT e.AXIAL_MEMBER_ID,
       e.CLIENT_NAME,
       e.ELIG_PRE_1Y_MONTHS,
       e.ELIG_PRE_3M_MONTHS,
       e.ELIG_POST_3M_MONTHS,
       e.ELIG_POST_1Y_MONTHS,
       COALESCE(ins.IN_SCOPE_POST_1M, 0) AS IN_SCOPE_POST_1M,
       ins.IN_SCOPE_MIN_MONTH,
       COALESCE(ins.IN_SCOPE_POST_MONTHS, 0) AS IN_SCOPE_POST_MONTHS,
       d.DEMO_AGE,
       d.DEMO_GENERATION,
       d.DEMO_GENDER,
       COALESCE(d.DEMO_COUNTY, 'unknown') AS DEMO_COUNTY,
       svi.SVI_COUNTY_POP, 
       svi.SVI_COUNTY_PCT_BELOW_POVERTY,
       svi.SVI_COUNTY_PCT_UNEMPLOTED,
       svi.SVI_COUNTY_PCI,
       svi.SVI_COUNTY_PCT_MINORITY,
       svi.SVI_COUNTY_PCT_DISABILITY,
       COALESCE(mu1m.MED_UTIL_1M_CLAIMS, 0) AS MED_UTIL_1M_CLAIMS,
       COALESCE(mu1m.MED_UTIL_1M_PROF_CLAIMS, 0) AS MED_UTIL_1M_PROF_CLAIMS,
       COALESCE(mu1m.MED_UTIL_1M_FAC_CLAIMS, 0) AS MED_UTIL_1M_FAC_CLAIMS,
       COALESCE(mu1m.MED_UTIL_1M_PROF_PROVIDERS, 0) AS MED_UTIL_1M_PROF_PROVIDERS,
       COALESCE(mu1m.MED_UTIL_1M_ALLOWED, 0) AS MED_UTIL_1M_ALLOWED,
       mu1y.MED_UTIL_1Y_CLAIMS,
       COALESCE(mu1y.MED_UTIL_1Y_PROF_CLAIMS, 0) AS MED_UTIL_1Y_PROF_CLAIMS,
       COALESCE(mu1y.MED_UTIL_1Y_FAC_CLAIMS, 0) AS MED_UTIL_1Y_FAC_CLAIMS,
       COALESCE(mu1y.MED_UTIL_1Y_PROF_PROVIDERS, 0) AS MED_UTIL_1Y_PROF_PROVIDERS,
       COALESCE(mu1y.MED_UTIL_1Y_ALLOWED, 0) AS MED_UTIL_1Y_ALLOWED,
       COALESCE(ru1m.RX_UTIL_1M_FILLS, 0) AS RX_UTIL_1M_FILLS,
       COALESCE(ru1m.RX_UTIL_1M_PRESCRIBERS, 0) AS RX_UTIL_1M_PRESCRIBERS,
       COALESCE(ru1m.RX_UTIL_1M_PHARMACIES, 0) AS RX_UTIL_1M_PHARMACIES,
       COALESCE(ru1m.RX_UTIL_1M_AMOUNT_ALLOWED, 0) AS RX_UTIL_1M_AMOUNT_ALLOWED,
       COALESCE(ru1m.RX_UTIL_1M_MAT, 0) AS RX_UTIL_1M_MAT,
       COALESCE(ru1y.RX_UTIL_1Y_FILLS, 0) AS RX_UTIL_1Y_FILLS,
       COALESCE(ru1y.RX_UTIL_1Y_PRESCRIBERS, 0) AS RX_UTIL_1Y_PRESCRIBERS,
       COALESCE(ru1y.RX_UTIL_1Y_PHARMACIES, 0) AS RX_UTIL_1Y_PHARMACIES,
       COALESCE(ru1y.RX_UTIL_1Y_AMOUNT_ALLOWED, 0) AS RX_UTIL_1Y_AMOUNT_ALLOWED,
       COALESCE(ru1y.RX_UTIL_1Y_MAT, 0) AS RX_UTIL_1Y_MAT,
       COALESCE(proc1m.PROC_1M_MAT_CLAIMS, 0) AS PROC_1M_MAT_CLAIMS,
       COALESCE(proc1m.PROC_1M_ADDICTION_COUNSELING_CLAIMS, 0) AS PROC_1M_ADDICTION_COUNSELING_CLAIMS,
       COALESCE(proc1m.PROC_1M_NONPHARM_SUD_CLAIMS, 0) AS PROC_1M_NONPHARM_SUD_CLAIMS,
       COALESCE(proc1m.PROC_1M_COGNITIVE_BH_CLAIMS, 0) AS PROC_1M_COGNITIVE_BH_CLAIMS,
       COALESCE(proc1m.PROC_1M_PSYSOC_CLAIMS, 0) AS PROC_1M_PSYSOC,
       COALESCE(proc1m.PROC_1M_DETOX_CLAIMS, 0) AS PROC_1M_DETOX_CLAIMS,
       COALESCE(proc1m.PROC_1M_SMOKING_CLAIMS, 0) AS PROC_1M_SMOKING_CLAIMS,
       COALESCE(proc1m.PROC_1M_SCHIZOPHRENIA_INJECT_CLAIMS, 0) AS PROC_1M_SCHIZOPHRENIA_INJECT_CLAIMS,
       COALESCE(proc1y.PROC_1Y_MAT_CLAIMS, 0) AS PROC_1Y_MAT_CLAIMS,
       COALESCE(proc1y.PROC_1Y_ADDICTION_COUNSELING_CLAIMS, 0) AS PROC_1Y_ADDICTION_COUNSELING_CLAIMS,
       COALESCE(proc1y.PROC_1Y_NONPHARM_SUD_CLAIMS, 0) AS PROC_1Y_NONPHARM_SUD_CLAIMS,
       COALESCE(proc1y.PROC_1Y_COGNITIVE_BH_CLAIMS, 0) AS PROC_1Y_COGNITIVE_BH_CLAIMS,
       COALESCE(proc1y.PROC_1Y_PSYSOC_CLAIMS, 0) AS PROC_1Y_PSYSOC,
       COALESCE(proc1y.PROC_1Y_DETOX_CLAIMS, 0) AS PROC_1Y_DETOX_CLAIMS,
       COALESCE(proc1y.PROC_1Y_SMOKING_CLAIMS, 0) AS PROC_1Y_SMOKING_CLAIMS,
       COALESCE(proc1y.PROC_1Y_SCHIZOPHRENIA_INJECT_CLAIMS, 0) AS PROC_1Y_SCHIZOPHRENIA_INJECT_CLAIMS,
       COALESCE(pos1m.POS_1M_UNIQUE, 0) AS POS_1M_UNIQUE,
       COALESCE(pos1m.POS_1M_11_DATES, 0) AS POS_1M_11_DATES,
       COALESCE(pos1m.POS_1M_20_DATES, 0) AS POS_1M_20_DATES,
       COALESCE(pos1m.POS_1M_21_DATES, 0) AS POS_1M_21_DATES,
       COALESCE(pos1m.POS_1M_22_DATES, 0) AS POS_1M_22_DATES,
       COALESCE(pos1m.POS_1M_23_DATES, 0) AS POS_1M_23_DATES,
       COALESCE(pos1m.POS_1M_24_DATES, 0) AS POS_1M_24_DATES,
       COALESCE(pos1m.POS_1M_53_DATES, 0) AS POS_1M_53_DATES,
       COALESCE(pos1m.POS_1M_55_DATES, 0) AS POS_1M_55_DATES,
       COALESCE(pos1m.POS_1M_57_DATES, 0) AS POS_1M_57_DATES,
       COALESCE(pos1m.POS_1M_58_DATES, 0) AS POS_1M_58_DATES,
       COALESCE(pos1y.POS_1Y_UNIQUE, 0) AS POS_1Y_UNIQUE,
       COALESCE(pos1y.POS_1Y_11_DATES, 0) AS POS_1Y_11_DATES,
       COALESCE(pos1y.POS_1Y_20_DATES, 0) AS POS_1Y_20_DATES,
       COALESCE(pos1y.POS_1Y_21_DATES, 0) AS POS_1Y_21_DATES,
       COALESCE(pos1y.POS_1Y_22_DATES, 0) AS POS_1Y_22_DATES,
       COALESCE(pos1y.POS_1Y_23_DATES, 0) AS POS_1Y_23_DATES,
       COALESCE(pos1y.POS_1Y_24_DATES, 0) AS POS_1Y_24_DATES,
       COALESCE(pos1y.POS_1Y_53_DATES, 0) AS POS_1Y_53_DATES,
       COALESCE(pos1y.POS_1Y_55_DATES, 0) AS POS_1Y_55_DATES,
       COALESCE(pos1y.POS_1Y_57_DATES, 0) AS POS_1Y_57_DATES,
       COALESCE(pos1y.POS_1Y_58_DATES, 0) AS POS_1Y_58_DATES,
       COALESCE(dx1m.DX_1M_SUD_FLAG, 0) AS DX_1M_SUD_FLAG,
       COALESCE(dx1m.DX_1M_BH_FLAG, 0) AS DX_1M_BH_FLAG,
       COALESCE(dx1m.DX_1M_RISK_FLAG, 0) AS DX_1M_RISK_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_FLAG, 0) AS DX_1M_COMORBID_FLAG,
       COALESCE(dx1m.DX_1M_DRUG_OVERDOSE_FLAG, 0) AS DX_1M_DRUG_OVERDOSE_FLAG,
       COALESCE(dx1m.DX_1M_NICOTENE_DEPEND_FLAG, 0) AS DX_1M_NICOTENE_DEPEND_FLAG,
       COALESCE(dx1m.DX_1M_SUD_WITHDRAW_FLAG, 0) AS DX_1M_SUD_WITHDRAW_FLAG,
       COALESCE(dx1m.DX_1M_PREGNANCY_FLAG, 0) AS DX_1M_PREGNANCY_FLAG,
       COALESCE(dx1m.DX_1M_COVID_FLAG, 0) AS DX_1M_COVID_FLAG,
       COALESCE(dx1m.DX_1M_AUD_FLAG, 0) AS DX_1M_AUD_FLAG,
       COALESCE(dx1m.DX_1M_OUD_FLAG, 0) AS DX_1M_OUD_FLAG, 
       COALESCE(dx1m.DX_1M_COCAINE_FLAG, 0) AS DX_1M_COCAINE_FLAG,
       COALESCE(dx1m.DX_1M_STIMULANTS_FLAG, 0) AS DX_1M_STIMULANTS_FLAG,
       COALESCE(dx1m.DX_1M_OTHER_PSYCHO_FLAG, 0) AS DX_1M_OTHER_PSYCHO_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_MOOD_FLAG, 0) AS DX_1M_COMORBID_MOOD_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_TRAUMA_STRESSOR_FLAG, 0) AS DX_1M_COMORBID_TRAUMA_STRESSOR_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_CURRENT_PAST_SMOKING_FLAG, 0) AS DX_1M_COMORBID_CURRENT_PAST_SMOKING_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_PERSONALITY_FLAG, 0) AS DX_1M_COMORBID_PERSONALITY_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_ANXIETY_FLAG, 0) AS DX_1M_COMORBID_ANXIETY_FLAG,
       COALESCE(dx1m.DX_1M_COMORBID_SLEEP_APNEA_FLAG, 0) AS DX_1M_COMORBID_SLEEP_APNEA_FLAG,
       COALESCE(dx1m.DX_1M_BH_BIPOLAR_FLAG, 0) AS DX_1M_BH_BIPOLAR_FLAG,
       COALESCE(dx1m.DX_1M_BH_DEPRESSION_FLAG, 0) AS DX_1M_BH_DEPRESSION_FLAG,
       COALESCE(dx1m.DX_1M_BH_SCHIZOPHRENIA_FLAG, 0) AS DX_1M_BH_SCHIZOPHRENIA_FLAG,
       COALESCE(dx1m.DX_1M_BH_PTSD_FLAG, 0) AS DX_1M_BH_PTSD_FLAG,
       COALESCE(dx1m.DX_1M_CCS_ENM_FLAG, 0) AS DX_1M_CCS_ENM_FLAG,
       COALESCE(dx1m.DX_1M_CCS_MUSCULO_FLAG, 0) AS DX_1M_CCS_MUSCULO_FLAG,
       COALESCE(dx1m.DX_1M_CCS_BLOOD_FLAG, 0) AS DX_1M_CCS_BLOOD_FLAG,
       COALESCE(dx1m.DX_1M_CCS_HEALTH_FACTORS_FLAG, 0) AS DX_1M_CCS_HEALTH_FACTORS_FLAG,
       COALESCE(dx1m.DX_1M_CCS_INFECTION_FLAG, 0) AS DX_1M_CCS_INFECTION_FLAG,
       COALESCE(dx1m.DX_1M_CCS_RESPIRATORY_FLAG, 0) AS DX_1M_CCS_RESPIRATORY_FLAG,
       COALESCE(dx1m.DX_1M_CCS_NERVOUS_FLAG, 0) AS DX_1M_CCS_NERVOUS_FLAG,
       COALESCE(dx1m.DX_1M_CCS_CIRCULATORY_FLAG, 0) AS DX_1M_CCS_CIRCULATORY_FLAG,
       COALESCE(dx1m.DX_1M_CCS_DIGESTIVE_FLAG, 0) AS DX_1M_CCS_DIGESTIVE_FLAG,
       COALESCE(dx1m.DX_1M_CCS_INJURY_POISON_FLAG, 0) AS DX_1M_CCS_INJURY_POISON_FLAG,
       COALESCE(dx1m.DX_1M_CCS_SKIN_FLAG, 0) AS DX_1M_CCS_SKIN_FLAG,
       COALESCE(dx1m.DX_1M_CCS_MENTAL_ILLNESS_FLAG, 0) AS DX_1M_CCS_MENTAL_ILLNESS_FLAG,
       COALESCE(dx1m.DX_1M_CCS_PREGNANCY_COMPLICATION_FLAG, 0) AS DX_1M_CCS_PREGNANCY_COMPLICATION_FLAG,
       COALESCE(dx1m.DX_1M_CCS_ALCOHOL_FLAG, 0) AS DX_1M_CCS_ALCOHOL_FLAG,
       COALESCE(dx1m.DX_1M_CCS_STI_FLAG, 0) AS DX_1M_CCS_STI_FLAG,
       COALESCE(dx1m.DX_1M_CCS_ACUTE_CVD_FLAG, 0) AS DX_1M_CCS_ACUTE_CVD_FLAG,
       COALESCE(dx1m.DX_1M_CCS_ADVERSE_EFFECTS_FLAG, 0) AS DX_1M_CCS_ADVERSE_EFFECTS_FLAG,
       COALESCE(dx1m.DX_1M_CCS_SEPSIS_FLAG, 0) AS DX_1M_CCS_SEPSIS_FLAG,
       COALESCE(dx1m.DX_1M_SUD_DATES, 0) AS DX_1M_SUD_DATES,
       COALESCE(dx1m.DX_1M_BH_DATES, 0) AS DX_1M_BH_DATES,
       COALESCE(dx1m.DX_1M_RISK_DATES, 0) AS DX_1M_RISK_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_DATES, 0) AS DX_1M_COMORBID_DATES,
       COALESCE(dx1m.DX_1M_DRUG_OVERDOSE_DATES, 0) AS DX_1M_DRUG_OVERDOSE_DATES,
       COALESCE(dx1m.DX_1M_NICOTENE_DEPEND_DATES, 0) AS DX_1M_NICOTENE_DEPEND_DATES,
       COALESCE(dx1m.DX_1M_SUD_WITHDRAW_DATES, 0) AS DX_1M_SUD_WITHDRAW_DATES,
       COALESCE(dx1m.DX_1M_COVID_DATES, 0) AS DX_1M_COVID_DATES,
       COALESCE(dx1m.DX_1M_AUD_DATES, 0) AS DX_1M_AUD_DATES,
       COALESCE(dx1m.DX_1M_OUD_DATES, 0) AS DX_1M_OUD_DATES, 
       COALESCE(dx1m.DX_1M_COCAINE_DATES, 0) AS DX_1M_COCAINE_DATES,
       COALESCE(dx1m.DX_1M_STIMULANTS_DATES, 0) AS DX_1M_STIMULANTS_DATES,
       COALESCE(dx1m.DX_1M_OTHER_PSYCHO_DATES, 0) AS DX_1M_OTHER_PSYCHO_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_MOOD_DATES, 0) AS DX_1M_COMORBID_MOOD_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_TRAUMA_STRESSOR_DATES, 0) AS DX_1M_COMORBID_TRAUMA_STRESSOR_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_CURRENT_PAST_SMOKING_DATES, 0) AS DX_1M_COMORBID_CURRENT_PAST_SMOKING_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_PERSONALITY_DATES, 0) AS DX_1M_COMORBID_PERSONALITY_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_ANXIETY_DATES, 0) AS DX_1M_COMORBID_ANXIETY_DATES,
       COALESCE(dx1m.DX_1M_COMORBID_SLEEP_APNEA_DATES, 0) AS DX_1M_COMORBID_SLEEP_APNEA_DATES,
       COALESCE(dx1m.DX_1M_BH_BIPOLAR_DATES, 0) AS DX_1M_BH_BIPOLAR_DATES,
       COALESCE(dx1m.DX_1M_BH_DEPRESSION_DATES, 0) AS DX_1M_BH_DEPRESSION_DATES,
       COALESCE(dx1m.DX_1M_BH_SCHIZOPHRENIA_DATES, 0) AS DX_1M_BH_SCHIZOPHRENIA_DATES,
       COALESCE(dx1m.DX_1M_BH_PTSD_DATES, 0) AS DX_1M_BH_PTSD_DATES,
       COALESCE(dx1m.DX_1M_CCS_ENM_DATES, 0) AS DX_1M_CCS_ENM_DATES,
       COALESCE(dx1m.DX_1M_CCS_MUSCULO_DATES, 0) AS DX_1M_CCS_MUSCULO_DATES,
       COALESCE(dx1m.DX_1M_CCS_BLOOD_DATES, 0) AS DX_1M_CCS_BLOOD_DATES,
       COALESCE(dx1m.DX_1M_CCS_HEALTH_FACTORS_DATES, 0) AS DX_1M_CCS_HEALTH_FACTORS_DATES,
       COALESCE(dx1m.DX_1M_CCS_MENTAL_ILLNESS_DATES, 0) AS DX_1M_CCS_MENTAL_ILLNESS_DATES,
       COALESCE(dx1m.DX_1M_CCS_INFECTION_DATES, 0) AS DX_1M_CCS_INFECTION_DATES,
       COALESCE(dx1m.DX_1M_CCS_RESPIRATORY_DATES, 0) AS DX_1M_CCS_RESPIRATORY_DATES,
       COALESCE(dx1m.DX_1M_CCS_NERVOUS_DATES, 0) AS DX_1M_CCS_NERVOUS_DATES,
       COALESCE(dx1m.DX_1M_CCS_CIRCULATORY_DATES, 0) AS DX_1M_CCS_CIRCULATORY_DATES,
       COALESCE(dx1m.DX_1M_CCS_DIGESTIVE_DATES, 0) AS DX_1M_CCS_DIGESTIVE_DATES,
       COALESCE(dx1m.DX_1M_CCS_INJURY_POISON_DATES, 0) AS DX_1M_CCS_INJURY_POISON_DATES,
       COALESCE(dx1m.DX_1M_CCS_SKIN_DATES, 0) AS DX_1M_CCS_SKIN_DATES,
       COALESCE(dx1m.DX_1M_CCS_ALCOHOL_DATES, 0) AS DX_1M_CCS_ALCOHOL_DATES,
       COALESCE(dx1m.DX_1M_CCS_STI_DATES, 0) AS DX_1M_CCS_STI_DATES,
       COALESCE(dx1m.DX_1M_CCS_ACUTE_CVD_DATES, 0) AS DX_1M_CCS_ACUTE_CVD_DATES,
       COALESCE(dx1m.DX_1M_CCS_ADVERSE_EFFECTS_DATES, 0) AS DX_1M_CCS_ADVERSE_EFFECTS_DATES,
       COALESCE(dx1y.DX_1Y_SUD_FLAG, 0) AS DX_1Y_SUD_FLAG,
       COALESCE(dx1y.DX_1Y_BH_FLAG, 0) AS DX_1Y_BH_FLAG,
       COALESCE(dx1y.DX_1Y_RISK_FLAG, 0) AS DX_1Y_RISK_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_FLAG, 0) AS DX_1Y_COMORBID_FLAG,
       COALESCE(dx1y.DX_1Y_DRUG_OVERDOSE_FLAG, 0) AS DX_1Y_DRUG_OVERDOSE_FLAG,
       COALESCE(dx1y.DX_1Y_NICOTENE_DEPEND_FLAG, 0) AS DX_1Y_NICOTENE_DEPEND_FLAG,
       COALESCE(dx1y.DX_1Y_SUD_WITHDRAW_FLAG, 0) AS DX_1Y_SUD_WITHDRAW_FLAG,
       COALESCE(dx1y.DX_1Y_PREGNANCY_FLAG, 0) AS DX_1Y_PREGNANCY_FLAG,
       COALESCE(dx1y.DX_1Y_COVID_FLAG, 0) AS DX_1Y_COVID_FLAG,
       COALESCE(dx1y.DX_1Y_AUD_FLAG, 0) AS DX_1Y_AUD_FLAG,
       COALESCE(dx1y.DX_1Y_OUD_FLAG, 0) AS DX_1Y_OUD_FLAG, 
       COALESCE(dx1y.DX_1Y_COCAINE_FLAG, 0) AS DX_1Y_COCAINE_FLAG,
       COALESCE(dx1y.DX_1Y_STIMULANTS_FLAG, 0) AS DX_1Y_STIMULANTS_FLAG,
       COALESCE(dx1y.DX_1Y_OTHER_PSYCHO_FLAG, 0) AS DX_1Y_OTHER_PSYCHO_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_MOOD_FLAG, 0) AS DX_1Y_COMORBID_MOOD_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_TRAUMA_STRESSOR_FLAG, 0) AS DX_1Y_COMORBID_TRAUMA_STRESSOR_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_CURRENT_PAST_SMOKING_FLAG, 0) AS DX_1Y_COMORBID_CURRENT_PAST_SMOKING_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_PERSONALITY_FLAG, 0) AS DX_1Y_COMORBID_PERSONALITY_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_ANXIETY_FLAG, 0) AS DX_1Y_COMORBID_ANXIETY_FLAG,
       COALESCE(dx1y.DX_1Y_COMORBID_SLEEP_APNEA_FLAG, 0) AS DX_1Y_COMORBID_SLEEP_APNEA_FLAG,
       COALESCE(dx1y.DX_1Y_BH_BIPOLAR_FLAG, 0) AS DX_1Y_BH_BIPOLAR_FLAG,
       COALESCE(dx1y.DX_1Y_BH_DEPRESSION_FLAG, 0) AS DX_1Y_BH_DEPRESSION_FLAG,
       COALESCE(dx1y.DX_1Y_BH_SCHIZOPHRENIA_FLAG, 0) AS DX_1Y_BH_SCHIZOPHRENIA_FLAG,
       COALESCE(dx1y.DX_1Y_BH_PTSD_FLAG, 0) AS DX_1Y_BH_PTSD_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_ENM_FLAG, 0) AS DX_1Y_CCS_ENM_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_MUSCULO_FLAG, 0) AS DX_1Y_CCS_MUSCULO_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_BLOOD_FLAG, 0) AS DX_1Y_CCS_BLOOD_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_HEALTH_FACTORS_FLAG, 0) AS DX_1Y_CCS_HEALTH_FACTORS_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_INFECTION_FLAG, 0) AS DX_1Y_CCS_INFECTION_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_RESPIRATORY_FLAG, 0) AS DX_1Y_CCS_RESPIRATORY_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_NERVOUS_FLAG, 0) AS DX_1Y_CCS_NERVOUS_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_CIRCULATORY_FLAG, 0) AS DX_1Y_CCS_CIRCULATORY_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_DIGESTIVE_FLAG, 0) AS DX_1Y_CCS_DIGESTIVE_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_INJURY_POISON_FLAG, 0) AS DX_1Y_CCS_INJURY_POISON_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_SKIN_FLAG, 0) AS DX_1Y_CCS_SKIN_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_MENTAL_ILLNESS_FLAG, 0) AS DX_1Y_CCS_MENTAL_ILLNESS_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_PREGNANCY_COMPLICATION_FLAG, 0) AS DX_1Y_CCS_PREGNANCY_COMPLICATION_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_ALCOHOL_FLAG, 0) AS DX_1Y_CCS_ALCOHOL_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_STI_FLAG, 0) AS DX_1Y_CCS_STI_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_ACUTE_CVD_FLAG, 0) AS DX_1Y_CCS_ACUTE_CVD_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_ADVERSE_EFFECTS_FLAG, 0) AS DX_1Y_CCS_ADVERSE_EFFECTS_FLAG,
       COALESCE(dx1y.DX_1Y_CCS_SEPSIS_FLAG, 0) AS DX_1Y_CCS_SEPSIS_FLAG,
       COALESCE(dx1y.DX_1Y_SUD_DATES, 0) AS DX_1Y_SUD_DATES,
       COALESCE(dx1y.DX_1Y_BH_DATES, 0) AS DX_1Y_BH_DATES,
       COALESCE(dx1y.DX_1Y_RISK_DATES, 0) AS DX_1Y_RISK_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_DATES, 0) AS DX_1Y_COMORBID_DATES,
       COALESCE(dx1y.DX_1Y_DRUG_OVERDOSE_DATES, 0) AS DX_1Y_DRUG_OVERDOSE_DATES,
       COALESCE(dx1y.DX_1Y_NICOTENE_DEPEND_DATES, 0) AS DX_1Y_NICOTENE_DEPEND_DATES,
       COALESCE(dx1y.DX_1Y_SUD_WITHDRAW_DATES, 0) AS DX_1Y_SUD_WITHDRAW_DATES,
       COALESCE(dx1y.DX_1Y_COVID_DATES, 0) AS DX_1Y_COVID_DATES,
       COALESCE(dx1y.DX_1Y_AUD_DATES, 0) AS DX_1Y_AUD_DATES,
       COALESCE(dx1y.DX_1Y_OUD_DATES, 0) AS DX_1Y_OUD_DATES, 
       COALESCE(dx1y.DX_1Y_COCAINE_DATES, 0) AS DX_1Y_COCAINE_DATES,
       COALESCE(dx1y.DX_1Y_STIMULANTS_DATES, 0) AS DX_1Y_STIMULANTS_DATES,
       COALESCE(dx1y.DX_1Y_OTHER_PSYCHO_DATES, 0) AS DX_1Y_OTHER_PSYCHO_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_MOOD_DATES, 0) AS DX_1Y_COMORBID_MOOD_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_TRAUMA_STRESSOR_DATES, 0) AS DX_1Y_COMORBID_TRAUMA_STRESSOR_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_CURRENT_PAST_SMOKING_DATES, 0) AS DX_1Y_COMORBID_CURRENT_PAST_SMOKING_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_PERSONALITY_DATES, 0) AS DX_1Y_COMORBID_PERSONALITY_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_ANXIETY_DATES, 0) AS DX_1Y_COMORBID_ANXIETY_DATES,
       COALESCE(dx1y.DX_1Y_COMORBID_SLEEP_APNEA_DATES, 0) AS DX_1Y_COMORBID_SLEEP_APNEA_DATES,
       COALESCE(dx1y.DX_1Y_BH_BIPOLAR_DATES, 0) AS DX_1Y_BH_BIPOLAR_DATES,
       COALESCE(dx1y.DX_1Y_BH_DEPRESSION_DATES, 0) AS DX_1Y_BH_DEPRESSION_DATES,
       COALESCE(dx1y.DX_1Y_BH_SCHIZOPHRENIA_DATES, 0) AS DX_1Y_BH_SCHIZOPHRENIA_DATES,
       COALESCE(dx1y.DX_1Y_BH_PTSD_DATES, 0) AS DX_1Y_BH_PTSD_DATES,
       COALESCE(dx1y.DX_1Y_CCS_ENM_DATES, 0) AS DX_1Y_CCS_ENM_DATES,
       COALESCE(dx1y.DX_1Y_CCS_MUSCULO_DATES, 0) AS DX_1Y_CCS_MUSCULO_DATES,
       COALESCE(dx1y.DX_1Y_CCS_BLOOD_DATES, 0) AS DX_1Y_CCS_BLOOD_DATES,
       COALESCE(dx1y.DX_1Y_CCS_HEALTH_FACTORS_DATES, 0) AS DX_1Y_CCS_HEALTH_FACTORS_DATES,
       COALESCE(dx1y.DX_1Y_CCS_MENTAL_ILLNESS_DATES, 0) AS DX_1Y_CCS_MENTAL_ILLNESS_DATES,
       COALESCE(dx1y.DX_1Y_CCS_INFECTION_DATES, 0) AS DX_1Y_CCS_INFECTION_DATES,
       COALESCE(dx1y.DX_1Y_CCS_RESPIRATORY_DATES, 0) AS DX_1Y_CCS_RESPIRATORY_DATES,
       COALESCE(dx1y.DX_1Y_CCS_NERVOUS_DATES, 0) AS DX_1Y_CCS_NERVOUS_DATES,
       COALESCE(dx1y.DX_1Y_CCS_CIRCULATORY_DATES, 0) AS DX_1Y_CCS_CIRCULATORY_DATES,
       COALESCE(dx1y.DX_1Y_CCS_DIGESTIVE_DATES, 0) AS DX_1Y_CCS_DIGESTIVE_DATES,
       COALESCE(dx1y.DX_1Y_CCS_INJURY_POISON_DATES, 0) AS DX_1Y_CCS_INJURY_POISON_DATES,
       COALESCE(dx1y.DX_1Y_CCS_SKIN_DATES, 0) AS DX_1Y_CCS_SKIN_DATES,
       COALESCE(dx1y.DX_1Y_CCS_ALCOHOL_DATES, 0) AS DX_1Y_CCS_ALCOHOL_DATES,
       COALESCE(dx1y.DX_1Y_CCS_STI_DATES, 0) AS DX_1Y_CCS_STI_DATES,
       COALESCE(dx1y.DX_1Y_CCS_ACUTE_CVD_DATES, 0) AS DX_1Y_CCS_ACUTE_CVD_DATES,
       COALESCE(dx1y.DX_1Y_CCS_ADVERSE_EFFECTS_DATES, 0) AS DX_1Y_CCS_ADVERSE_EFFECTS_DATES,
       COALESCE(rx1m.RX_1M_METHADONE_FILLS, 0) AS RX_1M_METHADONE_FILLS,
       COALESCE(rx1m.RX_1M_POLYDRUG_FILLS, 0) AS RX_1M_POLYDRUG_FILLS,
       COALESCE(rx1m.RX_1M_POLYDRUG_CRITICAL_FILLS, 0) AS RX_1M_POLYDRUG_CRITICAL_FILLS,
       COALESCE(rx1m.RX_1M_STIMULANT_FILLS, 0) AS RX_1M_STIMULANT_FILLS,
       COALESCE(rx1m.RX_1M_BENZO_FILLS, 0) AS RX_1M_BENZO_FILLS,
       COALESCE(rx1m.RX_1M_BARBITURATE_FILLS, 0) AS RX_1M_BARBITURATE_FILLS,
       COALESCE(rx1m.RX_1M_CARISOPRODOL_FILLS, 0) AS RX_1M_CARISOPRODOL_FILLS,
       COALESCE(rx1m.RX_1M_SLEEP_AID_FILLS, 0) AS RX_1M_SLEEP_AID_FILLS,
       COALESCE(rx1m.RX_1M_BUPRENORPHINE_FILLS, 0) AS RX_1M_BUPRENORPHINE_FILLS,
       COALESCE(rx1m.RX_1M_LAO_FILLS, 0) AS RX_1M_LAO_FILLS,
       COALESCE(rx1m.RX_1M_MAT_FILLS, 0) AS RX_1M_MAT_FILLS,
       COALESCE(rx1m.RX_1M_NALTREXONE_FILLS, 0) AS RX_1M_NALTREXONE_FILLS,
       COALESCE(rx1m.RX_1M_GABAPENTIN_FILLS, 0) AS RX_1M_GABAPENTIN_FILLS,
       COALESCE(rx1m.RX_1M_NALOXONE_FILLS, 0) AS RX_1M_NALOXONE_FILLS,
       COALESCE(rx1m.RX_1M_FENTANYL_FILLS, 0) AS RX_1M_FENTANYL_FILLS,
       COALESCE(rx1m.RX_1M_MUSCLE_RELAX_FILLS, 0) AS RX_1M_MUSCLE_RELAX_FILLS,
       COALESCE(rx1m.RX_1M_OPIOID_PAIN_FILLS, 0) AS RX_1M_OPIOID_PAIN_FILLS,
       COALESCE(rx1m.RX_1M_THERA_CLASS_UNIQUE, 0) AS RX_1M_THERA_CLASS_UNIQUE,
       COALESCE(rx1m.RX_1M_ANTIDEPRESSANT_FILLS, 0) AS RX_1M_ANTIDEPRESSANT_FILLS,
       COALESCE(rx1m.RX_1M_ANTIDEPRESSANT_THERA_CLASSES, 0) AS RX_1M_ANTIDEPRESSANT_THERA_CLASSES,
       COALESCE(rx1m.RX_1M_ANTIPSYCHOTIC_FILLS, 0) AS RX_1M_ANTIPSYCHOTIC_FILLS,
       COALESCE(rx1m.RX_1M_ANTIPSYCHOTIC_THERA_CLASSES, 0) AS RX_1M_ANTIPSYCHOTIC_THERA_CLASSES,
       COALESCE(rx1y.RX_1Y_METHADONE_FILLS, 0) AS RX_1Y_METHADONE_FILLS,
       COALESCE(rx1y.RX_1Y_POLYDRUG_FILLS, 0) AS RX_1Y_POLYDRUG_FILLS,
       COALESCE(rx1y.RX_1Y_POLYDRUG_CRITICAL_FILLS, 0) AS RX_1Y_POLYDRUG_CRITICAL_FILLS,
       COALESCE(rx1y.RX_1Y_STIMULANT_FILLS, 0) AS RX_1Y_STIMULANT_FILLS,
       COALESCE(rx1y.RX_1Y_BENZO_FILLS, 0) AS RX_1Y_BENZO_FILLS,
       COALESCE(rx1y.RX_1Y_BARBITURATE_FILLS, 0) AS RX_1Y_BARBITURATE_FILLS,
       COALESCE(rx1y.RX_1Y_CARISOPRODOL_FILLS, 0) AS RX_1Y_CARISOPRODOL_FILLS,
       COALESCE(rx1y.RX_1Y_SLEEP_AID_FILLS, 0) AS RX_1Y_SLEEP_AID_FILLS,
       COALESCE(rx1y.RX_1Y_BUPRENORPHINE_FILLS, 0) AS RX_1Y_BUPRENORPHINE_FILLS,
       COALESCE(rx1y.RX_1Y_LAO_FILLS, 0) AS RX_1Y_LAO_FILLS,
       COALESCE(rx1y.RX_1Y_MAT_FILLS, 0) AS RX_1Y_MAT_FILLS,
       COALESCE(rx1y.RX_1Y_NALTREXONE_FILLS, 0) AS RX_1Y_NALTREXONE_FILLS,
       COALESCE(rx1y.RX_1Y_GABAPENTIN_FILLS, 0) AS RX_1Y_GABAPENTIN_FILLS,
       COALESCE(rx1y.RX_1Y_NALOXONE_FILLS, 0) AS RX_1Y_NALOXONE_FILLS,
       COALESCE(rx1y.RX_1Y_FENTANYL_FILLS, 0) AS RX_1Y_FENTANYL_FILLS,
       COALESCE(rx1y.RX_1Y_MUSCLE_RELAX_FILLS, 0) AS RX_1Y_MUSCLE_RELAX_FILLS,
       COALESCE(rx1y.RX_1Y_OPIOID_PAIN_FILLS, 0) AS RX_1Y_OPIOID_PAIN_FILLS,
       COALESCE(rx1y.RX_1Y_THERA_CLASS_UNIQUE, 0) AS RX_1Y_THERA_CLASS_UNIQUE,
       COALESCE(rx1y.RX_1Y_ANTIDEPRESSANT_FILLS, 0) AS RX_1Y_ANTIDEPRESSANT_FILLS,
       COALESCE(rx1y.RX_1Y_ANTIDEPRESSANT_THERA_CLASSES, 0) AS RX_1Y_ANTIDEPRESSANT_THERA_CLASSES,
       COALESCE(rx1y.RX_1Y_ANTIPSYCHOTIC_FILLS, 0) AS RX_1Y_ANTIPSYCHOTIC_FILLS,
       COALESCE(rx1y.RX_1Y_ANTIPSYCHOTIC_THERA_CLASSES, 0) AS RX_1Y_ANTIPSYCHOTIC_THERA_CLASSES,
       COALESCE(hcc1y.HCC_1Y_HCC254_DATES, 0) AS HCC_1Y_HCC254_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC160_DATES, 0) AS HCC_1Y_HCC160_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC115_DATES, 0) AS HCC_1Y_HCC115_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC010_DATES, 0) AS HCC_1Y_HCC010_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC253_DATES, 0) AS HCC_1Y_HCC253_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC071_DATES, 0) AS HCC_1Y_HCC071_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC064_DATES, 0) AS HCC_1Y_HCC064_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC027_DATES, 0) AS HCC_1Y_HCC027_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC135_DATES, 0) AS HCC_1Y_HCC135_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC029_DATES, 0) AS HCC_1Y_HCC029_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC102_DATES, 0) AS HCC_1Y_HCC102_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC097_DATES, 0) AS HCC_1Y_HCC097_DATES,       
       COALESCE(hcc1y.HCC_1Y_HCC128_DATES, 0) AS HCC_1Y_HCC128_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC150_DATES, 0) AS HCC_1Y_HCC150_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC146_DATES, 0) AS HCC_1Y_HCC146_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC009_DATES, 0) AS HCC_1Y_HCC009_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC055_DATES, 0) AS HCC_1Y_HCC055_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC137_DATES, 0) AS HCC_1Y_HCC137_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC062_DATES, 0) AS HCC_1Y_HCC062_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC008_DATES, 0) AS HCC_1Y_HCC008_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC046_DATES, 0) AS HCC_1Y_HCC046_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC012_DATES, 0) AS HCC_1Y_HCC012_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC075_DATES, 0) AS HCC_1Y_HCC075_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC020_DATES, 0) AS HCC_1Y_HCC020_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC063_DATES, 0) AS HCC_1Y_HCC063_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC013_DATES, 0) AS HCC_1Y_HCC013_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC026_DATES, 0) AS HCC_1Y_HCC026_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC023_DATES, 0) AS HCC_1Y_HCC023_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC074_DATES, 0) AS HCC_1Y_HCC074_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC001_DATES, 0) AS HCC_1Y_HCC001_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC149_DATES, 0) AS HCC_1Y_HCC149_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC036_DATES, 0) AS HCC_1Y_HCC036_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC030_DATES, 0) AS HCC_1Y_HCC030_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC187_DATES, 0) AS HCC_1Y_HCC187_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC120_DATES, 0) AS HCC_1Y_HCC120_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC068_DATES, 0) AS HCC_1Y_HCC068_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC004_DATES, 0) AS HCC_1Y_HCC004_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC154_DATES, 0) AS HCC_1Y_HCC154_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC118_DATES, 0) AS HCC_1Y_HCC118_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC056_DATES, 0) AS HCC_1Y_HCC056_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC153_DATES, 0) AS HCC_1Y_HCC153_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC011_DATES, 0) AS HCC_1Y_HCC011_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC162_DATES, 0) AS HCC_1Y_HCC162_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC188_DATES, 0) AS HCC_1Y_HCC188_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC019_DATES, 0) AS HCC_1Y_HCC019_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC037_2_DATES, 0) AS HCC_1Y_HCC037_2_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC145_DATES, 0) AS HCC_1Y_HCC145_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC057_DATES, 0) AS HCC_1Y_HCC057_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC070_DATES, 0) AS HCC_1Y_HCC070_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC028_DATES, 0) AS HCC_1Y_HCC028_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC161_DATES, 0) AS HCC_1Y_HCC161_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC061_DATES, 0) AS HCC_1Y_HCC061_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC217_DATES, 0) AS HCC_1Y_HCC217_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC048_DATES, 0) AS HCC_1Y_HCC048_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC119_DATES, 0) AS HCC_1Y_HCC119_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC021_DATES, 0) AS HCC_1Y_HCC021_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC073_DATES, 0) AS HCC_1Y_HCC073_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC037_1_DATES, 0) AS HCC_1Y_HCC037_1_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC130_DATES, 0) AS HCC_1Y_HCC130_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC142_DATES, 0) AS HCC_1Y_HCC142_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC138_DATES, 0) AS HCC_1Y_HCC138_DATES,
       COALESCE(hcc1y.HCC_1Y_HCC139_DATES, 0) AS HCC_1Y_HCC139_DATES,
       COALESCE(pme1m.PME_1M_ER, 0) AS PME_1M_ER,
       COALESCE(pme1m.PME_1M_IP_PME, 0) AS PME_1M_IP_PME,
       COALESCE(pme1m.PME_1M_IP_BHPOS, 0) AS PME_1M_IP_BHPOS,
       COALESCE(pme1m.PME_1M_ER_SUD, 0) AS PME_1M_ER_SUD,
       COALESCE(pme1m.PME_1M_IP_SUD, 0) AS PME_1M_IP_SUD,
       COALESCE(pme1y.PME_1Y_ER, 0) AS PME_1Y_ER,
       COALESCE(pme1y.PME_1Y_IP_PME, 0) AS PME_1Y_IP_PME,
       COALESCE(pme1y.PME_1Y_IP_BHPOS, 0) AS PME_1Y_IP_BHPOS,
       COALESCE(pme1y.PME_1Y_ER_SUD, 0) AS PME_1Y_ER_SUD,
       COALESCE(pme1y.PME_1Y_IP_SUD, 0) AS PME_1Y_IP_SUD,
       COALESCE(pme1mp.PME_1M_POST_ER, 0) AS PME_1M_POST_ER,
       COALESCE(pme1mp.PME_1M_POST_IP_PME, 0) AS PME_1M_POST_IP_PME,
       COALESCE(pme1mp.PME_1M_POST_IP_BHPOS, 0) AS PME_1M_POST_IP_BHPOS,
       COALESCE(pme1mp.PME_1M_POST_ER_SUD, 0) AS PME_1M_POST_ER_SUD,
       COALESCE(pme1mp.PME_1M_POST_IP_SUD, 0) AS PME_1M_POST_IP_SUD,
       COALESCE(pme1yp.PME_1Y_POST_ER, 0) AS PME_1Y_POST_ER,
       COALESCE(pme1yp.PME_1Y_POST_IP_PME, 0) AS PME_1Y_POST_IP_PME,
       COALESCE(pme1yp.PME_1Y_POST_IP_BHPOS, 0) AS PME_1Y_POST_IP_BHPOS,
       COALESCE(pme1yp.PME_1Y_POST_ER_SUD, 0) AS PME_1Y_POST_ER_SUD,
       COALESCE(pme1yp.PME_1Y_POST_IP_SUD, 0) AS PME_1Y_POST_IP_SUD,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC254_DATES, 0) AS HCC_1Y_POST_HCC254_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC160_DATES, 0) AS HCC_1Y_POST_HCC160_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC115_DATES, 0) AS HCC_1Y_POST_HCC115_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC010_DATES, 0) AS HCC_1Y_POST_HCC010_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC253_DATES, 0) AS HCC_1Y_POST_HCC253_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC071_DATES, 0) AS HCC_1Y_POST_HCC071_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC064_DATES, 0) AS HCC_1Y_POST_HCC064_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC027_DATES, 0) AS HCC_1Y_POST_HCC027_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC135_DATES, 0) AS HCC_1Y_POST_HCC135_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC029_DATES, 0) AS HCC_1Y_POST_HCC029_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC102_DATES, 0) AS HCC_1Y_POST_HCC102_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC097_DATES, 0) AS HCC_1Y_POST_HCC097_DATES,       
       COALESCE(hcc1yp.HCC_1Y_POST_HCC128_DATES, 0) AS HCC_1Y_POST_HCC128_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC150_DATES, 0) AS HCC_1Y_POST_HCC150_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC146_DATES, 0) AS HCC_1Y_POST_HCC146_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC009_DATES, 0) AS HCC_1Y_POST_HCC009_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC055_DATES, 0) AS HCC_1Y_POST_HCC055_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC137_DATES, 0) AS HCC_1Y_POST_HCC137_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC062_DATES, 0) AS HCC_1Y_POST_HCC062_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC008_DATES, 0) AS HCC_1Y_POST_HCC008_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC046_DATES, 0) AS HCC_1Y_POST_HCC046_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC012_DATES, 0) AS HCC_1Y_POST_HCC012_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC075_DATES, 0) AS HCC_1Y_POST_HCC075_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC020_DATES, 0) AS HCC_1Y_POST_HCC020_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC063_DATES, 0) AS HCC_1Y_POST_HCC063_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC013_DATES, 0) AS HCC_1Y_POST_HCC013_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC026_DATES, 0) AS HCC_1Y_POST_HCC026_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC023_DATES, 0) AS HCC_1Y_POST_HCC023_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC074_DATES, 0) AS HCC_1Y_POST_HCC074_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC001_DATES, 0) AS HCC_1Y_POST_HCC001_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC149_DATES, 0) AS HCC_1Y_POST_HCC149_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC036_DATES, 0) AS HCC_1Y_POST_HCC036_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC030_DATES, 0) AS HCC_1Y_POST_HCC030_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC187_DATES, 0) AS HCC_1Y_POST_HCC187_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC120_DATES, 0) AS HCC_1Y_POST_HCC120_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC068_DATES, 0) AS HCC_1Y_POST_HCC068_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC004_DATES, 0) AS HCC_1Y_POST_HCC004_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC154_DATES, 0) AS HCC_1Y_POST_HCC154_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC118_DATES, 0) AS HCC_1Y_POST_HCC118_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC056_DATES, 0) AS HCC_1Y_POST_HCC056_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC153_DATES, 0) AS HCC_1Y_POST_HCC153_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC011_DATES, 0) AS HCC_1Y_POST_HCC011_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC162_DATES, 0) AS HCC_1Y_POST_HCC162_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC188_DATES, 0) AS HCC_1Y_POST_HCC188_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC019_DATES, 0) AS HCC_1Y_POST_HCC019_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC037_2_DATES, 0) AS HCC_1Y_POST_HCC037_2_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC145_DATES, 0) AS HCC_1Y_POST_HCC145_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC057_DATES, 0) AS HCC_1Y_POST_HCC057_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC070_DATES, 0) AS HCC_1Y_POST_HCC070_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC028_DATES, 0) AS HCC_1Y_POST_HCC028_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC161_DATES, 0) AS HCC_1Y_POST_HCC161_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC061_DATES, 0) AS HCC_1Y_POST_HCC061_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC217_DATES, 0) AS HCC_1Y_POST_HCC217_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC048_DATES, 0) AS HCC_1Y_POST_HCC048_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC119_DATES, 0) AS HCC_1Y_POST_HCC119_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC021_DATES, 0) AS HCC_1Y_POST_HCC021_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC073_DATES, 0) AS HCC_1Y_POST_HCC073_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC037_1_DATES, 0) AS HCC_1Y_POST_HCC037_1_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC130_DATES, 0) AS HCC_1Y_POST_HCC130_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC142_DATES, 0) AS HCC_1Y_POST_HCC142_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC138_DATES, 0) AS HCC_1Y_POST_HCC138_DATES,
       COALESCE(hcc1yp.HCC_1Y_POST_HCC139_DATES, 0) AS HCC_1Y_POST_HCC139_DATES
--INSERT INTO ZZ_DMR.STANDARD_FEATURE_SET
FROM ELIGIBILITY e
LEFT JOIN IN_SCOPE ins ON ins.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN DEMOGRAPHIC d ON d.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN SVI svi ON svi.SVI_COUNTY = d.DEMO_COUNTY AND svi.SVI_STATE = d.DEMO_STATE
LEFT JOIN MED_UTIL_1M mu1m ON mu1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN MED_UTIL_1Y mu1y ON mu1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN RX_UTIL_1M ru1m ON ru1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN RX_UTIL_1Y ru1y ON ru1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PROC_1M proc1m ON proc1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PROC_1Y proc1y ON proc1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN POS_1M pos1m ON pos1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN POS_1Y pos1y ON pos1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN DX_1M dx1m ON dx1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN DX_1Y dx1y ON dx1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN RX_1M rx1m ON rx1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN RX_1Y rx1y ON rx1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN HCC_1Y hcc1y ON hcc1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PME_1M pme1m ON pme1m.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PME_1Y pme1y ON pme1y.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PME_1M_POST pme1mp ON pme1mp.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN PME_1Y_POST pme1yp ON pme1yp.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN HCC_1Y_POST hcc1yp ON hcc1yp.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
LEFT JOIN MED_UTIL_1Y_POST mu1yp ON mu1yp.AXIAL_MEMBER_ID = e.AXIAL_MEMBER_ID
